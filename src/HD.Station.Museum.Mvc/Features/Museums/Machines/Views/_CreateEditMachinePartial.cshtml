@model MachineCreateViewModel

<fieldset name="Machine" class="div-machine">
    <legend>@Localizer["Machine"]:</legend>

    @Html.HiddenFor(m => m.Machine.Id)
    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                <div class="col-md-3">
                    <label for="Name" class="control-label">@Localizer["Name"]:</label>
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Machine.Name, new { @class = "form-control" })
                    <span class="field-validation-valid" data-valmsg-for="Name" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <label for="Description" class="control-label">@Localizer["Description"]:</label>
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Machine.Description, new { @class = "form-control" })
                    <span class="field-validation-valid" data-valmsg-for="Description" data-valmsg-replace="true"></span>
                </div>
            </div>

            @*<div class="form-group">
                <div class="col-md-3">
                    <label for="Category" class="control-label">@Localizer["Category"]:</label>
                </div>
                <div class="col-md-8">
                    <input id="dropdowntree" class="form-control" />                   
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-3">
                    <label for="Disabled" class="control-label">@Localizer["Disabled"]:</label>
                </div>
                <div class="col-md-8">
                    <div class="checkbox custom-control custom-checkbox">
                        <label>
                            <input type="hidden" name="Disabled" value="false">
                            @Html.CheckBoxFor(m => m.Machine.Disabled, new { @class = "control-center" })
                            <span class="custom-control-indicator"></span>
                        </label>
                    </div>
                    <span class="field-validation-valid" data-valmsg-for="Disabled " data-valmsg-replace="true"></span>

                </div>
            </div>

        </div>

        <div class="col-md-5">
            @Html.HiddenFor(m => m.Machine.ParentId)
            <div class="form-group">
                <div class="col-md-3">
                    <label for="Amount" class="control-label">@Localizer["Amount"]:</label>
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Machine.Amount, new { @class = "form-control" })
                    <span class="field-validation-valid" data-valmsg-for="Amount" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <label for="Price" class="control-label">@Localizer["Price"]:</label>
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Machine.Price, new { @class = "form-control" })
                    <span class="field-validation-valid" data-valmsg-for="Price" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <label for="Stage" class="control-label">@Localizer["Stage"]:</label>
                </div>
                <div class="col-md-8">
                    <select asp-for="Machine.Stage" asp-items="@EnumUtil.GetValues(typeof(StageType)).ToValueOptions().Select(o => new SelectListItem { Text = o.Text, Value = o.Value })" class="form-control"></select>
                    <span class="field-validation-valid" data-valmsg-for="Stage" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="form-group" style="display: none">
                <div class="col-md-3">
                    
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Machine.Price, new { @class = "form-control" })
                </div>
            </div>

        </div>

    </div>

</fieldset>
<style>
    .div-machine{
        margin-bottom:50px;
    }
</style>

@*<script>
    require(["jquery", "js/hd/FormHelper.js", 'kendo.all.min', "kendo.aspnetmvc.min", "toolkit"], function ($, formHelper) {
        _formHelper = formHelper;

        var dataCate = new kendo.data.HierarchicalDataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetCategories", "Categories")',
                    type: "GET",
                    dataType: "json"
                }
            },
            schema: {
                model: {
                    id: "Id",
                    hasChildren: "HasChildren"
                }
            }
        });

        $("#dropdowntree").kendoDropDownTree({
            placeholder: "Select ...",
            checkboxes: {
                template: "<input type='checkbox' name='checkedFiles[#= item.id #]' value='true' #= item.hasChildren ? 'disabled' :'' #/>"
            },
            autoClose: false,
            dataSource: dataCate,
            dataTextField: 'Name',
            dataValueField: 'Id',
            loadOnDemand: true,  // Chỉ load nút con khi bấm vào nút cha. nếu để false nó sẽ load tất cả các nút con khi bấm vào dropdown

        });
    })
</script>*@